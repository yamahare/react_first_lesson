{"version":3,"sources":["components/logo.svg","contexts/counter.js","components/App.js","components/Form.js","components/Click.js","components/Countup.js","components/Welcome.js","components/Rect.js","components/Messages.js","components/FormSubmit.js","serviceWorker.js","index.js"],"names":["module","exports","CounterContext","createContext","printMsg","msg","size","color","p_style","fontSize","border","style","App","dataContext","useContext","th","backgroundColor","padding","td","className","src","logo","alt","href","target","rel","name","mail","age","map","value","Form","useState","message","setMessage","type","id","onChange","event","in_val","Click","counter","setCounter","onClick","alert","Countup","useEffect","interval","setInterval","clearInterval","Welcome","props","old","Rect","data","setData","margin","width","height","e","x","pageX","y","pageY","tempArray","Array","from","push","d","s","position","left","top","draw","Messages","arr","children","split","arr2","i","length","trim","list","val","key","FormSubmit","tmpMessage","onSubmit","preventDefault","maxLength","onCheck","substr","required","pattern","Boolean","window","location","hostname","match","contextValue","Math","floor","random","elm","Provider","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.75449a79.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import { createContext } from 'react';\n\nconst CounterContext = createContext();\nexport default CounterContext;","import React, { useContext} from 'react';\nimport CounterContext from '../contexts/counter'\nimport logo from './logo.svg';\nimport './App.css';\n\nlet printMsg = (msg, size, color) => {\n  const p_style = {\n    fontSize: `${size}px`,\n    color: `${color}`,\n    border: '1px solid blue'\n  }\n  return <p style={p_style}>{msg}</p>;\n}\n\nfunction App() {\n\n  const dataContext = useContext(CounterContext);\n\n  const url = 'https://yamahare.github.io/react_first_lesson/';\n  const flg = true;\n  const table = {\n    fontSize: \"16px\",\n    padding: \"5px 50px\",\n  }\n  const th = {\n    color: 'white',\n    backgroundColor: \"#006\",\n    padding: \"5px 15px\",\n  }\n  const td = {\n    color: 'black',\n    padding: '5px 15px',\n    border: '1px solid gray'\n  }\n  const data = [\n      {name: 'Taro', mail: 'taro@mail.com', age: 45},\n      {name: 'Hanako', mail: 'hanako@mail.com', age: 10},\n      {name: 'Tanjiro', mail: 'tanjiro@mail.com', age: 20}\n  ]\n\n  return (\n    <div>\n      <h2>{dataContext}</h2>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          {printMsg('最初のメッセージ', 30, '#ddd')}\n          {printMsg('2番目メッセージ', 20, '#aaa')}\n          {printMsg('3番目メッセージ', 10, '#333')}\n          <a className=\"App-link\" href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n            Learn React\n          </a>\n        </header>\n\n        {flg ? <p>trueだよ</p> : <p>falseだよ</p> }\n        {(()=>\n          <dl>test</dl> \n        )()}\n\n        <table style={table}>\n          <tr>\n            <th style={th}>name</th>\n            <th style={th}>mail</th>\n            <th style={th}>age</th>\n          </tr>\n          {data.map((value) => (\n            <tr>\n              <td style={td}>{value.name}</td>\n              <td style={td}>{value.mail}</td>\n              <td style={td}>{value.age}</td>\n            </tr>\n          ))}\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useState } from 'react';\n\nfunction Form(){\n    const [message, setMessage] = useState(\"お名前どぞ～\");\n\n    let doChange = (event) => {\n        let in_val = event.target.value;\n        setMessage('こんにちは'+ in_val + 'さん');\n    }\n    return (\n        <div>\n            <p>{message}</p>\n            <div>\n                <input type=\"text\" id=\"input\" onChange={doChange} />\n            </div>\n        </div>\n    )\n}\n\nexport default Form;","import React, { useState } from 'react';\n\nfunction Click(){\n    const [counter, setCounter] = useState(0);\n\n    function doAction() {\n        alert('おしたね？')\n    }\n\n    return (\n        <div>\n            <p>\n               count: {counter} \n            </p>\n            <button onClick={() => setCounter(counter+1)}>カウントアップ</button>\n            <button onClick={doAction}>押してね</button>\n        </div>\n    )\n}\n\nexport default Click;","import React, { useState, useEffect, useContext } from 'react';\nimport CounterContext from '../contexts/counter'\n\nfunction Countup(){\n    const [counter, setCounter] = useState(0);\n    const dataContext = useContext(CounterContext);\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setCounter(counter => counter+1)\n        }, 1000);\n        return () => clearInterval(interval);\n    }, []);\n\n    return (\n        <div>\n            <h2>{dataContext}</h2>\n            <p>\n               count: {counter} \n            </p>\n        </div>\n    )\n}\n\nexport default Countup;","\nimport React from 'react';\n\nfunction Welcome(props){\n    return (\n        <div>\n            <p>\n               ようこそ！ {props.name}  さん ({props.old})\n            </p>\n        </div>\n    )\n}\n\nexport default Welcome;","import React, { useState } from 'react';\n\nfunction Rect(){\n    const [data, setData] = useState([]);\n\n    let msgStyle = {\n        fontSize: \"20pt\",\n        color: \"#900\",\n        margin: \"20px 0px\",\n        padding: \"5px\",\n    }\n\n    let area = {\n        width: \"500px\",\n        height: \"500px\",\n        border: \"1px solid blue\",\n        margin: \"50px\"\n    }\n\n    function doAction(e){\n        let x = e.pageX;\n        let y = e.pageY;\n        let tempArray = Array.from(data);\n        tempArray.push({x:x, y:y});\n        setData(tempArray);\n    }\n\n    function draw(d){\n        let s = {\n            position: \"absolute\",\n            left: (d.x - 25) + \"px\",\n            top: (d.y - 25) + \"px\",\n            width: \"50px\",\n            height: \"50px\",\n            backgroundColor: \"#66f3\",\n        };\n        return <div style={s}></div>\n    }\n\n    return (\n        <div>\n            <h1>Rect</h1>\n            <h2 style={msgStyle}>show Rect</h2>\n            <div style={area} onClick={doAction}>\n                {data.map(value => draw(value))}\n            </div>\n        </div>\n    )\n}\n\nexport default Rect;","import React from 'react';\n\nfunction Messages(props){\n\n    let content = props.children;\n    let arr = content.split('。');\n    let arr2 = [];\n    for(let i=0; i<arr.length; i++){\n        if(arr[i].trim() !== ''){\n            arr2.push(arr[i]);\n        }\n    }\n    let list = arr2.map((val, key)=>(\n        <li key={key}>{val}.</li>\n    ))\n\n    return (\n        <div>\n            <ol>{list}</ol>\n        </div>\n    )\n}\n\nexport default Messages;","import React, { useState } from 'react';\n\nfunction FormSubmit(props){\n    const [message, setMessage] = useState(\"お名前どぞ～\");\n    let tmpMessage = '';\n\n    let doChange = (event)=>{\n        tmpMessage = `Hello, ${event.target.value}`;\n        if(event.target.value.length > props.maxLength){\n            props.onCheck(event);\n            event.target.value = event.target.value.substr(0, props.maxLength);\n        }\n    }\n\n    let doSubmit = (event) => {\n        event.preventDefault();\n        setMessage(tmpMessage);\n    }\n\n    return (\n        <div>\n            <h1>フォームサブミット</h1>\n            <h2>{message}</h2>\n            <form onSubmit={doSubmit}>\n                <label>\n                    <span>Message:</span>\n                    <input type=\"text\" id=\"input\" onChange={doChange} required pattern=\"[A-Za-z _,.]+\" />\n                </label>\n                <input type=\"submit\" value=\"Click\"></input>\n            </form>\n        </div>\n    )\n}\n\nexport default FormSubmit;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport Form from './components/Form';\nimport Click from './components/Click';\nimport Countup from './components/Countup';\nimport Welcome from './components/Welcome';\nimport Rect from './components/Rect';\nimport Messages from './components/Messages';\nimport FormSubmit from './components/FormSubmit';\nimport CounterContext from './contexts/counter'\nimport * as serviceWorker from './serviceWorker';\n\nlet contextValue = `コンテキストの値です ${Math.floor(Math.random() * Math.floor(10))}`;\nlet doCheck = (event)=>{\n    alert(`${event.target.value}は長すぎます。`)\n}\n\nlet elm = (\n    <CounterContext.Provider value={contextValue}>\n        <App></App>\n        <Countup></Countup>\n        <Click></Click>\n        <Form></Form>\n        <Welcome name=\"Taro\" old=\"14\"></Welcome>\n        <Welcome name=\"砂糖\" old=\"20\"></Welcome>\n        <Rect></Rect>\n        <hr></hr>\n        <Messages>\n            これはコンポーネントないのコンテンツです。\n            マルでテキストを分割し、リストにして表示します。\n            改行は必要ありません。\n        </Messages>\n        <FormSubmit maxLength=\"10\" onCheck={doCheck}></FormSubmit>\n    </CounterContext.Provider>\n);\nReactDOM.render(elm, document.getElementById('root'));\n\nserviceWorker.unregister();"],"sourceRoot":""}